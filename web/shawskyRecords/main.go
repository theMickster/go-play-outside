package main

import (
	"shawskyRecords/controllers"
	_ "shawskyRecords/docs" // docs is generated by Swag CLI, you have to import it.
	"shawskyRecords/middleware"
	"shawskyRecords/settings"

	"github.com/gin-gonic/gin"

	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

//	@title			Shawsky Records API
//	@version		1.0
//	@description	This is a sample record store.
//	@termsOfService	http://swagger.io/terms/

//	@contact.name	API Support
//	@contact.url	http://www.swagger.io/support
//	@contact.email	support@swagger.io

//	@license.name	Apache 2.0
//	@license.url	http://www.apache.org/licenses/LICENSE-2.0.html

//	@host		localhost:8081
//	@BasePath	/api/v1

// @externalDocs.description  OpenAPI
// @externalDocs.url          https://swagger.io/resources/open-api/

func main() {
	authSettings := settings.RetrieveAuthSettings()
	appSettings := settings.RetrieveApplicationSettings()

	r := gin.Default()
	r.Use(middleware.RequestId())
	r.Use(gin.Logger())
	r.Use(gin.Recovery())
	r.Use(middleware.CORS())
	r.Use(middleware.ApplicationHeader(appSettings))
	r.Use(middleware.AuthorizationHeader(authSettings))

	c := controllers.NewController()

	v1 := r.Group("/api/v1")
	{
		albums := v1.Group("/albums")
		{
			albums.GET("", c.GetAlbums)
			albums.GET("/:id", c.GetAlbumById)
			albums.POST("", c.CreateAlbum)
			albums.PUT("/:id", c.UpdateAlbum)
			albums.DELETE("/:id", c.DeleteAlbum)
		}
	}

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	r.Run(settings.RetrieveApplicationPort())
}
